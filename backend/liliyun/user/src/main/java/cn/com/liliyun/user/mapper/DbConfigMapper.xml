<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.liliyun.user.mapper.DbConfigMapper" >
  <resultMap id="BaseResultMap" type="cn.com.liliyun.user.model.DbConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="dblink" property="dblink" jdbcType="VARCHAR" />
    <result column="isused" property="isused" jdbcType="TINYINT" />
    <result column="schoolid" property="schoolid" jdbcType="INTEGER" />
    <result column="schoolname" property="schoolname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, dblink, isused, schoolid, schoolname
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.com.liliyun.user.model.DbConfig" >
    select 
    <include refid="Base_Column_List" />
    from t_dbconfig
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectDB" resultMap="BaseResultMap" parameterType="cn.com.liliyun.user.model.DbConfig" >
    select 
    <include refid="Base_Column_List" />
    from t_dbconfig where isused = 0 order by id asc limit 1;
  </select>
  <select id="selectDBCount" resultType="int" parameterType="cn.com.liliyun.user.model.DbConfig" >
    select count(1) from t_dbconfig where isused = 0;
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_dbconfig
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.liliyun.user.model.DbConfig" >
    insert into t_dbconfig (id, dblink, isused, 
      schoolid, schoolname)
    values (#{id,jdbcType=INTEGER}, #{dblink,jdbcType=VARCHAR}, #{isused,jdbcType=TINYINT}, 
      #{schoolid,jdbcType=INTEGER}, #{schoolname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.liliyun.user.model.DbConfig" >
    insert into t_dbconfig
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="dblink != null" >
        dblink,
      </if>
      <if test="isused != null" >
        isused,
      </if>
      <if test="schoolid != null" >
        schoolid,
      </if>
      <if test="schoolname != null" >
        schoolname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dblink != null" >
        #{dblink,jdbcType=VARCHAR},
      </if>
      <if test="isused != null" >
        #{isused,jdbcType=TINYINT},
      </if>
      <if test="schoolid != null" >
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="schoolname != null" >
        #{schoolname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.liliyun.user.model.DbConfig" >
    update t_dbconfig
    <set >
      <if test="dblink != null" >
        dblink = #{dblink,jdbcType=VARCHAR},
      </if>
      <if test="isused != null" >
        isused = #{isused,jdbcType=TINYINT},
      </if>
      <if test="schoolid != null" >
        schoolid = #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="schoolname != null" >
        schoolname = #{schoolname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.liliyun.user.model.DbConfig" >
    update t_dbconfig
    set dblink = #{dblink,jdbcType=VARCHAR},
      isused = #{isused,jdbcType=TINYINT},
      schoolid = #{schoolid,jdbcType=INTEGER},
      schoolname = #{schoolname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>